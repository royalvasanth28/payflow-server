package com.payflow.payflow.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.payflow.payflow.dao.UserDao;
import com.payflow.payflow.dto.ResponseStructure;
import com.payflow.payflow.entity.User;
import com.payflow.payflow.exception.IdNotFoundException;
import com.payflow.payflow.exception.ResourceNotFoundException;

@Service
public class UserService {

	@Autowired
	private UserDao userDao;
	
	public ResponseEntity<ResponseStructure<User>> saveUser(User user){
		User saveUser=userDao.saveUser(user);
		
		ResponseStructure<User> responseStructure = new ResponseStructure<User>();
		responseStructure.setStatus(true);
		responseStructure.setMessage("User Saved Successfully");
		responseStructure.setData(saveUser);
		return new ResponseEntity<ResponseStructure<User>>(responseStructure,HttpStatus.CREATED);
	}
	
	public ResponseEntity<ResponseStructure<User>> getUserById(Long id){
		User user=userDao.getUserById(id);
		if(user!=null) {
			ResponseStructure<User> responseStructure = new ResponseStructure<User>();
			responseStructure.setStatus(true);
			responseStructure.setMessage("User detail found successfully");
			responseStructure.setData(user);
			
			return new ResponseEntity<ResponseStructure<User>>(responseStructure,HttpStatus.OK);
		}else {
			throw new IdNotFoundException();
		}
	}
	
	public ResponseEntity<ResponseStructure<List<User>>> getAllUser(){
		List<User> list=userDao.getAllUser();
		
		ResponseStructure<List<User>> responseStructure = new ResponseStructure<List<User>>();
		if(list.size()>0) {
			responseStructure.setStatus(true);
			responseStructure.setMessage("Users details found successfully");
			responseStructure.setData(list);
			
			return new ResponseEntity<ResponseStructure<List<User>>>(responseStructure,HttpStatus.OK);
		}else {
			throw new ResourceNotFoundException("The User list is Empty !!!");
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
