package com.payflow.payflow.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.payflow.payflow.dto.ResponseStructure;
import com.payflow.payflow.entity.ContactType;
import com.payflow.payflow.service.ContactTypeService;

@RestController
@RequestMapping("/payflow/ContactType")
public class ContactTypeController {

	@Autowired
	private ContactTypeService contactTypeService;
	
	@PostMapping("/{id}")
	public ResponseEntity<ResponseStructure<ContactType>> addContactType(@RequestBody ContactType contactType,@PathVariable Long id){
		return contactTypeService.addContactType(contactType,id);
	}
	
	@GetMapping("/{contactTypeId}")
	public ResponseEntity<ResponseStructure<ContactType>> getContactTypeById(@PathVariable Long contactTypeId){
		return contactTypeService.getContactType(contactTypeId);
	}
	
	@GetMapping
	public ResponseEntity<ResponseStructure<List<ContactType>>> getAllContactType(){
		return contactTypeService.getAllContactType();
	}
	
	@PutMapping
	public ResponseEntity<ResponseStructure<ContactType>> updateContactType(@RequestBody ContactType contactType){
		return contactTypeService.updateContactType(contactType);
	}
	
	@DeleteMapping("/id/{contactTypeId}")
	public ResponseEntity<ResponseStructure<ContactType>> deleteContactType(@PathVariable Long contactTypeId){
		return contactTypeService.deleteContactType(contactTypeId);
	}
}
